
def getTarFileName(file) {
    String tarFile = '' + file + '-' + tallyDataCoreVersion + '-assembly.tar.gz'
    return tarFile
}

task buildMaven(type: Exec) {
    executable 'sh'
    args "-c", "rm -rf dockertarget/* && mvn clean install"
}

def createUnzipTask(demoType, appName, tarPath) {
    def theTask = tasks.create("makeDockerImage${demoType}"){
        String appNameWithVersion = appName + '-' + tallyDataCoreVersion
        String tarFile = getTarFileName(appName)
        copy {
            from tarTree(tarPath + tarFile)
            into binTarget
        }
        File finalDir = new File(binTarget + '/'+appName)
        finalDir.mkdirs()
        file(binTarget +'/'+appNameWithVersion).renameTo(new File(finalDir, '/app'))

        def dockerfileDir = new File( 'dockerfiles/'+appName )
        if(dockerfileDir.exists()){
            copy{
                from dockerfileDir
                into finalDir
            }
        }
    }
 //   theTask.dependsOn buildMaven
    return theTask
}

createUnzipTask('TallyUser', 'tallyuser-servo', 'tallyuser/tallyuser-servo/target/')
createUnzipTask('TallyAdmin', 'tallyadmin-servo', 'tallyadmin/tallyadmin-servo/target/')
createUnzipTask('TallyBiz', 'tallybiz-servo', 'tallybiz/tallybiz-servo/target/')
createUnzipTask('TallyManagement', 'tallymanagement-servo', 'tallymanagement/tallymanagement-servo/target/')

task startAll(type: Exec) {
    executable 'sh'
    args "-c", "dockertarget/tallyuser-servo/app/bin/start.sh &&" +
            " dockertarget/tallyadmin-servo/app/bin/start.sh && " +
            "dockertarget/tallybiz-servo/app/bin/start.sh && " +
            "dockertarget/tallymanagement-servo/app/bin/start.sh"
}
task restartAll(type: Exec) {
    executable 'sh'
    args "-c", "dockertarget/tallyuser-servo/app/bin/restart.sh &&" +
            " dockertarget/tallyadmin-servo/app/bin/restart.sh && " +
            "dockertarget/tallybiz-servo/app/bin/restart.sh && " +
            "dockertarget/tallymanagement-servo/app/bin/restart.sh"
}
task stopAll(type: Exec) {
    executable 'sh'
    args "-c", "dockertarget/tallyuser-servo/app/bin/stop.sh &&" +
            " dockertarget/tallyadmin-servo/app/bin/stop.sh && " +
            "dockertarget/tallybiz-servo/app/bin/stop.sh && " +
            "dockertarget/tallymanagement-servo/app/bin/stop.sh"
}

startAll.dependsOn {
    tasks.findAll { task -> task.name.startsWith('makeDockerImage') }
}
restartAll.dependsOn {
    tasks.findAll { task -> task.name.startsWith('makeDockerImage') }
}
stopAll.dependsOn {
    tasks.findAll { task -> task.name.startsWith('makeDockerImage') }
}
